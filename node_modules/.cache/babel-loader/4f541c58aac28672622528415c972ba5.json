{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nrequire(\"./index.css\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n} // Aliases\n\n\nconst abs = Math.abs;\nconst float = parseFloat;\nconst style = window.getComputedStyle; // Values\n\nconst MIN = 'min';\nconst MAX = 'max';\nconst ANY = 'any';\nconst VERTICAL = 'vertical';\nconst TABINDEX = 'tabindex'; // Data Attributes\n\nconst DATA_LOWER = 'data-lower';\nconst DATA_UPPER = 'data-upper';\nconst DATA_ACTIVE = 'data-active';\nconst DATA_VERTICAL = 'data-vertical';\nconst DATA_DISABLED = 'data-disabled';\n\nclass RangeSlider extends _react.PureComponent {\n  constructor() {\n    super();\n    this.element = /*#__PURE__*/(0, _react.createRef)();\n    this.input = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.thumb = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.range = /*#__PURE__*/(0, _react.createRef)();\n    this.options = {};\n    this.isControlled = false;\n    this.isComponentMounted = false;\n  }\n\n  componentDidMount() {\n    if (!this.isComponentMounted) {\n      this.value = this.setMinMaxProps(); // Thumb indexes for min and max values\n      // (swapped when the thumbs cross each other)\n\n      this.index = this.setMinMaxProps(0, 1); // Thumb width & height for calculation of exact positions and sizes of horizontal thumbs and range\n\n      this.thumbWidth = this.setMinMaxProps();\n      this.thumbHeight = this.setMinMaxProps(); // Slidable range limits (when a thumb is dragged)\n\n      this.rangeLimits = this.setMinMaxProps(); // Slider value depending on the user interaction\n\n      this.sliderValue = this.setMinMaxProps(); // For dragging thumbs and range\n\n      this.maxRangeWidth = 0;\n      this.rangeWidth = 0;\n      this.isDragging = false;\n      this.thumbDrag = false;\n      this.startPos = 0; // initial\n\n      this.reset(); // Add listeners to element\n\n      this.addNodeEventListener(this.element.current, 'pointerdown', e => {\n        this.elementFocused(e);\n      }); // Add listeners to thumbs and set [data-disabled] on disabled thumbs\n\n      this.thumb.forEach((t, i) => {\n        this.addNodeEventListener(t.current, 'pointerdown', e => {\n          this.initiateThumbDrag(e, i, t.current);\n        });\n        this.addNodeEventListener(t.current, 'keydown', e => {\n          if (e.which >= 37 && e.which <= 40) {\n            e.preventDefault();\n            this.stepValue(i, e.which);\n          }\n        });\n      }); // Add listeners to range\n\n      this.addNodeEventListener(this.range.current, 'pointerdown', e => {\n        this.initiateRangeDrag(e);\n      }); // Add global listeners\n\n      this.addNodeEventListener(document, 'pointermove', e => {\n        this.drag(e);\n      });\n      this.addNodeEventListener(document, 'pointerup', () => {\n        if (this.isDragging) {\n          this.removeNodeAttribute(this.thumb[0].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.thumb[1].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.range.current, DATA_ACTIVE);\n          this.isDragging = false;\n\n          if (this.thumbDrag) {\n            if (this.options.onThumbDragEnd) {\n              this.options.onThumbDragEnd();\n            }\n          } else {\n            if (this.options.onRangeDragEnd) {\n              this.options.onRangeDragEnd();\n            }\n          }\n        }\n      });\n      this.addNodeEventListener(window, 'resize', () => {\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n      });\n      this.isComponentMounted = true;\n    }\n  }\n\n  componentDidUpdate() {\n    this.reset();\n  }\n\n  reset() {\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.updateOrientation();\n    this.setValue('', true, false);\n    this.updateRangeLimits();\n    this.updateDisabledState();\n    this.updateThumbsDisabledState();\n    this.updateTabIndexes();\n    this.isControlled = !!this.props.value;\n  }\n\n  isNumber(n) {\n    // check for NaN explicitly\n    // because with NaN, the second exp. evaluates to true\n    return !isNaN(n) && +n + '' === n + '';\n  }\n\n  setMinMaxProps() {\n    let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return {\n      min,\n      max\n    };\n  }\n\n  iterateMinMaxProps(fn) {\n    [MIN, MAX].forEach(fn);\n  }\n\n  getSetProps(condition, expression, fn) {\n    if (condition) {\n      return expression;\n    } else {\n      fn();\n    }\n  }\n\n  setNodeAttribute(node, attribute) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    node.setAttribute(attribute, value);\n  }\n\n  removeNodeAttribute(node, attribute) {\n    node.removeAttribute(attribute);\n  }\n\n  addNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true; // with options for pointer events\n\n    node.addEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n\n  fallbackToDefault(property, defaultValue) {\n    this.options[property] = this.props[property] ? this.props[property] : defaultValue;\n  }\n\n  ifVerticalElse(vertical, horizontal) {\n    return this.options.orientation === VERTICAL ? vertical : horizontal;\n  }\n\n  currentIndex(i) {\n    return i === 1 ? this.index.max : this.index.min;\n  } // Set min and max values to 1 (arbitrarily) if any of the min or max values are \"invalid\"\n  // Setting both values 1 will disable the slider\n  // Called when,\n  // -> the element is initially set\n  // -> min or max properties are modified\n\n\n  safeMinMaxValues() {\n    let error = false;\n\n    if (!this.isNumber(this.options.min) || !this.isNumber(this.options.max)) {\n      error = true;\n    }\n\n    this.options.min = error ? 1 : +this.options.min;\n    this.options.max = error ? 1 : +this.options.max;\n  } // Reframe the thumbsDisabled value if \"invalid\"\n  // Called when,\n  // -> the element is initially set\n  // -> thumbsDisabled property is modified\n\n\n  safeThumbsDisabledValues() {\n    if (this.options.thumbsDisabled instanceof Array) {\n      if (this.options.thumbsDisabled.length === 1) {\n        this.options.thumbsDisabled.push(false);\n      }\n\n      if (this.options.thumbsDisabled.length !== 1 && this.options.thumbsDisabled.length !== 2) {\n        this.options.thumbsDisabled = [false, false];\n      }\n    } else {\n      this.options.thumbsDisabled = [this.options.thumbsDisabled, this.options.thumbsDisabled];\n    } // Boolean Values\n\n\n    this.options.thumbsDisabled[0] = !!this.options.thumbsDisabled[0];\n    this.options.thumbsDisabled[1] = !!this.options.thumbsDisabled[1];\n  } // Called when,\n  // -> the element is initially set\n  // -> min, max, step or value properties are modified\n  // -> thumbs are dragged\n  // -> element is clicked upon\n  // -> an arrow key is pressed\n\n\n  setValue(newValue) {\n    let forceSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true; // Current value as set in the input elements\n    // which could change while changing min, max and step values\n\n    const currentValue = this.setMinMaxProps(this.input[this.index.min].current.value, this.input[this.index.max].current.value); // var value is synced with the values set in the input elements if no newValue is passed\n\n    newValue = newValue || currentValue;\n    this.input[this.index.min].current.value = newValue.min;\n    this.input[this.index.max].current.value = this.thumbDrag || forceSet ? newValue.max : newValue.min + this.rangeWidth;\n    this.syncValues(); // Check if the thumbs cross each other\n\n    if (this.value.min > this.value.max) {\n      // Switch thumb indexes\n      this.index.min = +!this.index.min;\n      this.index.max = +!this.index.max; // Switch thumb attributes\n\n      this.removeNodeAttribute(this.thumb[this.index.min].current, DATA_UPPER);\n      this.removeNodeAttribute(this.thumb[this.index.max].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.min].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.max].current, DATA_UPPER); // Switch thumb drag labels\n\n      if (this.thumbDrag) {\n        this.thumbDrag = this.thumbDrag === MIN ? MAX : MIN;\n      }\n\n      this.syncValues();\n    }\n\n    this.sliderValue = forceSet ? this.value : newValue;\n    let valueSet = false;\n\n    if (currentValue.min !== this.input[this.index.min].current.value || forceSet) {\n      valueSet = true;\n    }\n\n    if (currentValue.max !== this.input[this.index.max].current.value || forceSet) {\n      valueSet = true;\n    } // Update the positions, dimensions and aria attributes everytime a value is set\n    // and call the onInput function from options (if set)\n\n\n    if (valueSet) {\n      if (callback && this.options.onInput) {\n        this.options.onInput([this.value.min, this.value.max]);\n      }\n\n      this.syncThumbDimensions();\n      this.updateThumbs();\n      this.updateRange();\n      this.updateAriaValueAttributes();\n    }\n  } // Sync var value with the input elements\n\n\n  syncValues() {\n    this.iterateMinMaxProps(_ => {\n      this.value[_] = +this.input[this.index[_]].current.value;\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n\n  updateThumbs() {\n    this.iterateMinMaxProps(_ => {\n      this.thumb[this.index[_]].current.style[this.ifVerticalElse('top', 'left')] = \"calc(\".concat((this.value[_] - this.options.min) / this.maxRangeWidth * 100, \"% + \").concat((0.5 - (this.value[_] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[_], \"px)\");\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n\n  updateRange() {\n    const deltaOffset = (0.5 - (this.value.min - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).min / this.element.current[\"client\".concat(this.ifVerticalElse('Height', 'Width'))];\n    const deltaDimension = (0.5 - (this.value.max - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).max / this.element.current[\"client\".concat(this.ifVerticalElse('Height', 'Width'))];\n    this.range.current.style[this.ifVerticalElse('top', 'left')] = \"\".concat(((this.value.min - this.options.min) / this.maxRangeWidth + deltaOffset) * 100, \"%\");\n    this.range.current.style[this.ifVerticalElse('height', 'width')] = \"\".concat(((this.value.max - this.options.min) / this.maxRangeWidth - (this.value.min - this.options.min) / this.maxRangeWidth - deltaOffset + deltaDimension) * 100, \"%\");\n  }\n\n  updateRangeLimits() {\n    this.iterateMinMaxProps((_, i) => {\n      this.rangeLimits[_] = this.options.thumbsDisabled[i] ? this.value[_] : this.options[_];\n    });\n  } // Called when,\n  // -> thumbs are initially set\n  // -> thumbs are disabled / enabled\n\n\n  updateTabIndexes() {\n    this.iterateMinMaxProps((_, i) => {\n      if (!this.options.disabled && !this.options.thumbsDisabled[i]) {\n        this.setNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX, 0);\n      } else {\n        this.removeNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX);\n      }\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n\n\n  updateAriaValueAttributes() {\n    this.iterateMinMaxProps(_ => {\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemin', this.options.min);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemax', this.options.max);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuenow', this.value[_]);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuetext', this.value[_]);\n    });\n  } // Called when,\n  // -> disabled property is modified\n\n\n  updateDisabledState() {\n    if (this.options.disabled) {\n      this.setNodeAttribute(this.element.current, DATA_DISABLED);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_DISABLED);\n    }\n  } // Called when,\n  // -> thumbsDisabled property is modified\n\n\n  updateThumbsDisabledState() {\n    this.options.thumbsDisabled.forEach((d, i) => {\n      const currIndex = this.currentIndex(i);\n\n      if (d) {\n        this.setNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', true);\n      } else {\n        this.removeNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', false);\n      }\n    });\n  } // Called when,\n  // -> min or max values are modified\n\n\n  updateLimits(limit) {\n    let m = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.options[limit] = m;\n    this.safeMinMaxValues();\n    this.iterateMinMaxProps(_ => {\n      this.input[0].current[_] = this.options[_];\n      this.input[1].current[_] = this.options[_];\n    });\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.setValue('', true);\n    this.updateRangeLimits();\n  } // Called when,\n  // -> the element is initially set\n  // -> orientation property is modified\n\n\n  updateOrientation() {\n    if (this.options.orientation === VERTICAL) {\n      this.setNodeAttribute(this.element.current, DATA_VERTICAL);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_VERTICAL);\n    }\n\n    this.range.current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.range.current.style[this.ifVerticalElse('width', 'height')] = '';\n    this.thumb[0].current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.thumb[1].current.style[this.ifVerticalElse('left', 'top')] = '';\n  } // thumb width & height values are to be synced with the CSS values for correct calculation of\n  // thumb position and range width & position\n  // Called when,\n  // -> setValue is called and a value is set (called before updateThumbs() and updateRange())\n  // -> thumb / range drag is initiated\n  // -> window is resized\n\n\n  syncThumbDimensions() {\n    this.iterateMinMaxProps(_ => {\n      this.thumbWidth[_] = float(style(this.thumb[this.index[_]].current).width);\n      this.thumbHeight[_] = float(style(this.thumb[this.index[_]].current).height);\n    });\n  } // thumb position calculation depending upon the pointer position\n\n\n  currentPosition(e, node) {\n    const currPos = (node[\"offset\".concat(this.ifVerticalElse('Top', 'Left'))] + (e[\"client\".concat(this.ifVerticalElse('Y', 'X'))] - node.getBoundingClientRect()[this.ifVerticalElse('top', 'left')]) - (this.thumbDrag ? (0.5 - (this.value[this.thumbDrag] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[this.thumbDrag] : 0)) / this.element.current[\"client\".concat(this.ifVerticalElse('Height', 'Width'))] * this.maxRangeWidth + this.options.min;\n\n    if (currPos < this.options.min) {\n      return this.options.min;\n    }\n\n    if (currPos > this.options.max) {\n      return this.options.max;\n    }\n\n    return currPos;\n  }\n\n  doesntHaveClassName(e, className) {\n    return !e.target.classList.contains(className);\n  }\n\n  elementFocused(e) {\n    let setFocus = false;\n\n    if (!this.isControlled && !this.options.disabled && (this.doesntHaveClassName(e, 'range-slider__thumb') && this.doesntHaveClassName(e, 'range-slider__range') || this.options.rangeSlideDisabled && this.doesntHaveClassName(e, 'range-slider__thumb'))) {\n      setFocus = true;\n    } // No action if both thumbs are disabled\n\n\n    if (setFocus && this.options.thumbsDisabled[0] && this.options.thumbsDisabled[1]) {\n      setFocus = false;\n    }\n\n    if (setFocus) {\n      const currPos = this.currentPosition(e, this.range.current);\n      const deltaMin = abs(this.value.min - currPos);\n      const deltaMax = abs(this.value.max - currPos);\n\n      if (this.options.thumbsDisabled[0]) {\n        if (currPos >= this.value.min) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true);\n          this.initiateThumbDrag(e, this.index.max, this.thumb[this.index.max].current);\n        }\n      } else if (this.options.thumbsDisabled[1]) {\n        if (currPos <= this.value.max) {\n          this.setValue(this.setMinMaxProps(currPos, this.value.max), true);\n          this.initiateThumbDrag(e, this.index.min, this.thumb[this.index.min].current);\n        }\n      } else {\n        let nearestThumbIndex = this.index.max;\n\n        if (deltaMin === deltaMax) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true);\n        } else {\n          this.setValue(this.setMinMaxProps(deltaMin < deltaMax ? currPos : this.value.min, deltaMax < deltaMin ? currPos : this.value.max), true);\n          nearestThumbIndex = deltaMin < deltaMax ? this.index.min : this.index.max;\n        }\n\n        this.initiateThumbDrag(e, nearestThumbIndex, this.thumb[nearestThumbIndex].current);\n      }\n    }\n  }\n\n  initiateDrag(e, node) {\n    this.syncThumbDimensions();\n    this.setNodeAttribute(node, DATA_ACTIVE);\n    this.startPos = this.currentPosition(e, node);\n    this.isDragging = true;\n  }\n\n  initiateThumbDrag(e, i, node) {\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      this.initiateDrag(e, node);\n      this.thumbDrag = this.index.min === i ? MIN : MAX;\n\n      if (this.options.onThumbDragStart) {\n        this.options.onThumbDragStart();\n      }\n    }\n  }\n\n  initiateRangeDrag(e) {\n    if (!this.options.disabled && !this.options.rangeSlideDisabled) {\n      this.initiateDrag(e, this.range.current);\n      this.rangeWidth = this.value.max - this.value.min;\n      this.thumbDrag = false;\n\n      if (this.options.onRangeDragStart) {\n        this.options.onRangeDragStart();\n      }\n    }\n  }\n\n  drag(e) {\n    if (this.isDragging && !this.isControlled) {\n      const lastPos = this.currentPosition(e, this.range.current);\n      const delta = lastPos - this.startPos;\n      let min = this.value.min;\n      let max = this.value.max;\n      const lower = this.thumbDrag ? this.rangeLimits.min : this.options.min;\n      const upper = this.thumbDrag ? this.rangeLimits.max : this.options.max;\n\n      if (!this.thumbDrag || this.thumbDrag === MIN) {\n        min = this.thumbDrag ? lastPos : this.sliderValue.min + delta;\n      }\n\n      if (!this.thumbDrag || this.thumbDrag === MAX) {\n        max = this.thumbDrag ? lastPos : this.sliderValue.max + delta;\n      }\n\n      if (min >= lower && min <= upper && max >= lower && max <= upper) {\n        this.setValue({\n          min,\n          max\n        });\n        this.startPos = lastPos;\n      } else {\n        // When min thumb reaches upper limit\n        if (min > upper && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(upper, upper));\n          this.startPos = lastPos;\n        } // When max thumb reaches lower limit\n\n\n        if (max < lower && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(lower, lower));\n          this.startPos = lastPos;\n        } // When range / min thumb reaches lower limit\n\n\n        if (min < lower) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(lower, this.value.max - this.value.min + lower));\n          } else {\n            this.setValue(this.setMinMaxProps(lower, this.value.max));\n          }\n\n          this.startPos = lastPos;\n        } // When range / max thumb reaches upper limit\n\n\n        if (max > upper) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(this.value.min - this.value.max + upper, upper));\n          } else {\n            this.setValue(this.setMinMaxProps(this.value.min, upper));\n          }\n\n          this.startPos = lastPos;\n        }\n      }\n\n      if (!this.thumbDrag) {\n        this.updateRangeLimits();\n      }\n    }\n  }\n\n  actualStepValue() {\n    const step = float(this.input[0].current.step);\n    return this.input[0].current.step === ANY ? ANY : step === 0 || isNaN(step) ? 1 : step;\n  } // Step value (up or down) using arrow keys\n\n\n  stepValue(i, key) {\n    const direction = (key === 37 || key === 40 ? -1 : 1) * this.ifVerticalElse(-1, 1);\n\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)] && !this.isControlled) {\n      let step = this.actualStepValue();\n      step = step === ANY ? 1 : step;\n      let min = this.value.min + step * (this.index.min === i ? direction : 0);\n      let max = this.value.max + step * (this.index.max === i ? direction : 0); // When min thumb reaches upper limit\n\n      if (min > this.rangeLimits.max) {\n        min = this.rangeLimits.max;\n      } // When max thumb reaches lower limit\n\n\n      if (max < this.rangeLimits.min) {\n        max = this.rangeLimits.min;\n      }\n\n      this.setValue({\n        min,\n        max\n      }, true);\n    }\n  }\n\n  render() {\n    // Set options to default values if not set\n    this.fallbackToDefault('rangeSlideDisabled', false);\n    this.fallbackToDefault('thumbsDisabled', [false, false]);\n    this.fallbackToDefault('orientation', 'horizontal');\n    this.fallbackToDefault('defaultValue', [25, 75]);\n    this.fallbackToDefault('disabled', false);\n    this.fallbackToDefault('onThumbDragStart', false);\n    this.fallbackToDefault('onRangeDragStart', false);\n    this.fallbackToDefault('onThumbDragEnd', false);\n    this.fallbackToDefault('onRangeDragEnd', false);\n    this.fallbackToDefault('onInput', false);\n    this.fallbackToDefault('step', 1);\n    this.fallbackToDefault('min', 0);\n    this.fallbackToDefault('max', 100);\n\n    if (this.props.value) {\n      this.fallbackToDefault('value', [25, 75]);\n    }\n\n    this.safeMinMaxValues();\n    this.safeThumbsDisabledValues();\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      \"data-testid\": \"element\",\n      id: this.props.id,\n      ref: this.element,\n      className: (0, _clsx.default)('range-slider', this.props.className)\n    }, /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[0],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[0] : this.isComponentMounted ? this.value.min : this.options.defaultValue[0],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[1],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[1] : this.isComponentMounted ? this.value.max : this.options.defaultValue[1],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[0],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-lower\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[1],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-upper\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.range,\n      className: \"range-slider__range\"\n    }));\n  }\n\n}\n\n;\nvar _default = RangeSlider;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_react","_interopRequireWildcard","require","_clsx","_interopRequireDefault","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","abs","Math","float","parseFloat","style","window","getComputedStyle","MIN","MAX","ANY","VERTICAL","TABINDEX","DATA_LOWER","DATA_UPPER","DATA_ACTIVE","DATA_VERTICAL","DATA_DISABLED","RangeSlider","PureComponent","constructor","element","createRef","input","thumb","range","options","isControlled","isComponentMounted","componentDidMount","setMinMaxProps","index","thumbWidth","thumbHeight","rangeLimits","sliderValue","maxRangeWidth","rangeWidth","isDragging","thumbDrag","startPos","reset","addNodeEventListener","current","e","elementFocused","forEach","t","i","initiateThumbDrag","which","preventDefault","stepValue","initiateRangeDrag","document","drag","removeNodeAttribute","onThumbDragEnd","onRangeDragEnd","syncThumbDimensions","updateThumbs","updateRange","componentDidUpdate","max","min","updateOrientation","setValue","updateRangeLimits","updateDisabledState","updateThumbsDisabledState","updateTabIndexes","props","isNumber","n","isNaN","arguments","length","undefined","iterateMinMaxProps","fn","getSetProps","condition","expression","setNodeAttribute","node","attribute","setAttribute","removeAttribute","event","isPointerEvent","addEventListener","passive","capture","fallbackToDefault","property","defaultValue","ifVerticalElse","vertical","horizontal","orientation","currentIndex","safeMinMaxValues","error","safeThumbsDisabledValues","thumbsDisabled","Array","push","newValue","forceSet","callback","currentValue","syncValues","valueSet","onInput","updateAriaValueAttributes","_","concat","deltaOffset","deltaDimension","disabled","d","currIndex","updateLimits","limit","m","width","height","currentPosition","currPos","getBoundingClientRect","doesntHaveClassName","className","target","classList","contains","setFocus","rangeSlideDisabled","deltaMin","deltaMax","nearestThumbIndex","initiateDrag","onThumbDragStart","onRangeDragStart","lastPos","delta","lower","upper","actualStepValue","step","direction","render","createElement","id","ref","type","onChange","role","_default"],"sources":["/home/cytech/Desktop/Projets Personnels/mapIslande/map-frontend/node_modules/react-range-slider-input/dist/components/RangeSlider.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.parse-float.js\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nrequire(\"./index.css\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// Aliases\nconst abs = Math.abs;\nconst float = parseFloat;\nconst style = window.getComputedStyle; // Values\n\nconst MIN = 'min';\nconst MAX = 'max';\nconst ANY = 'any';\nconst VERTICAL = 'vertical';\nconst TABINDEX = 'tabindex'; // Data Attributes\n\nconst DATA_LOWER = 'data-lower';\nconst DATA_UPPER = 'data-upper';\nconst DATA_ACTIVE = 'data-active';\nconst DATA_VERTICAL = 'data-vertical';\nconst DATA_DISABLED = 'data-disabled';\n\nclass RangeSlider extends _react.PureComponent {\n  constructor() {\n    super();\n    this.element = /*#__PURE__*/(0, _react.createRef)();\n    this.input = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.thumb = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.range = /*#__PURE__*/(0, _react.createRef)();\n    this.options = {};\n    this.isControlled = false;\n    this.isComponentMounted = false;\n  }\n\n  componentDidMount() {\n    if (!this.isComponentMounted) {\n      this.value = this.setMinMaxProps(); // Thumb indexes for min and max values\n      // (swapped when the thumbs cross each other)\n\n      this.index = this.setMinMaxProps(0, 1); // Thumb width & height for calculation of exact positions and sizes of horizontal thumbs and range\n\n      this.thumbWidth = this.setMinMaxProps();\n      this.thumbHeight = this.setMinMaxProps(); // Slidable range limits (when a thumb is dragged)\n\n      this.rangeLimits = this.setMinMaxProps(); // Slider value depending on the user interaction\n\n      this.sliderValue = this.setMinMaxProps(); // For dragging thumbs and range\n\n      this.maxRangeWidth = 0;\n      this.rangeWidth = 0;\n      this.isDragging = false;\n      this.thumbDrag = false;\n      this.startPos = 0; // initial\n\n      this.reset(); // Add listeners to element\n\n      this.addNodeEventListener(this.element.current, 'pointerdown', e => {\n        this.elementFocused(e);\n      }); // Add listeners to thumbs and set [data-disabled] on disabled thumbs\n\n      this.thumb.forEach((t, i) => {\n        this.addNodeEventListener(t.current, 'pointerdown', e => {\n          this.initiateThumbDrag(e, i, t.current);\n        });\n        this.addNodeEventListener(t.current, 'keydown', e => {\n          if (e.which >= 37 && e.which <= 40) {\n            e.preventDefault();\n            this.stepValue(i, e.which);\n          }\n        });\n      }); // Add listeners to range\n\n      this.addNodeEventListener(this.range.current, 'pointerdown', e => {\n        this.initiateRangeDrag(e);\n      }); // Add global listeners\n\n      this.addNodeEventListener(document, 'pointermove', e => {\n        this.drag(e);\n      });\n      this.addNodeEventListener(document, 'pointerup', () => {\n        if (this.isDragging) {\n          this.removeNodeAttribute(this.thumb[0].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.thumb[1].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.range.current, DATA_ACTIVE);\n          this.isDragging = false;\n\n          if (this.thumbDrag) {\n            if (this.options.onThumbDragEnd) {\n              this.options.onThumbDragEnd();\n            }\n          } else {\n            if (this.options.onRangeDragEnd) {\n              this.options.onRangeDragEnd();\n            }\n          }\n        }\n      });\n      this.addNodeEventListener(window, 'resize', () => {\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n      });\n      this.isComponentMounted = true;\n    }\n  }\n\n  componentDidUpdate() {\n    this.reset();\n  }\n\n  reset() {\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.updateOrientation();\n    this.setValue('', true, false);\n    this.updateRangeLimits();\n    this.updateDisabledState();\n    this.updateThumbsDisabledState();\n    this.updateTabIndexes();\n    this.isControlled = !!this.props.value;\n  }\n\n  isNumber(n) {\n    // check for NaN explicitly\n    // because with NaN, the second exp. evaluates to true\n    return !isNaN(n) && +n + '' === n + '';\n  }\n\n  setMinMaxProps() {\n    let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return {\n      min,\n      max\n    };\n  }\n\n  iterateMinMaxProps(fn) {\n    [MIN, MAX].forEach(fn);\n  }\n\n  getSetProps(condition, expression, fn) {\n    if (condition) {\n      return expression;\n    } else {\n      fn();\n    }\n  }\n\n  setNodeAttribute(node, attribute) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    node.setAttribute(attribute, value);\n  }\n\n  removeNodeAttribute(node, attribute) {\n    node.removeAttribute(attribute);\n  }\n\n  addNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    // with options for pointer events\n    node.addEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n\n  fallbackToDefault(property, defaultValue) {\n    this.options[property] = this.props[property] ? this.props[property] : defaultValue;\n  }\n\n  ifVerticalElse(vertical, horizontal) {\n    return this.options.orientation === VERTICAL ? vertical : horizontal;\n  }\n\n  currentIndex(i) {\n    return i === 1 ? this.index.max : this.index.min;\n  } // Set min and max values to 1 (arbitrarily) if any of the min or max values are \"invalid\"\n  // Setting both values 1 will disable the slider\n  // Called when,\n  // -> the element is initially set\n  // -> min or max properties are modified\n\n\n  safeMinMaxValues() {\n    let error = false;\n\n    if (!this.isNumber(this.options.min) || !this.isNumber(this.options.max)) {\n      error = true;\n    }\n\n    this.options.min = error ? 1 : +this.options.min;\n    this.options.max = error ? 1 : +this.options.max;\n  } // Reframe the thumbsDisabled value if \"invalid\"\n  // Called when,\n  // -> the element is initially set\n  // -> thumbsDisabled property is modified\n\n\n  safeThumbsDisabledValues() {\n    if (this.options.thumbsDisabled instanceof Array) {\n      if (this.options.thumbsDisabled.length === 1) {\n        this.options.thumbsDisabled.push(false);\n      }\n\n      if (this.options.thumbsDisabled.length !== 1 && this.options.thumbsDisabled.length !== 2) {\n        this.options.thumbsDisabled = [false, false];\n      }\n    } else {\n      this.options.thumbsDisabled = [this.options.thumbsDisabled, this.options.thumbsDisabled];\n    } // Boolean Values\n\n\n    this.options.thumbsDisabled[0] = !!this.options.thumbsDisabled[0];\n    this.options.thumbsDisabled[1] = !!this.options.thumbsDisabled[1];\n  } // Called when,\n  // -> the element is initially set\n  // -> min, max, step or value properties are modified\n  // -> thumbs are dragged\n  // -> element is clicked upon\n  // -> an arrow key is pressed\n\n\n  setValue(newValue) {\n    let forceSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // Current value as set in the input elements\n    // which could change while changing min, max and step values\n    const currentValue = this.setMinMaxProps(this.input[this.index.min].current.value, this.input[this.index.max].current.value); // var value is synced with the values set in the input elements if no newValue is passed\n\n    newValue = newValue || currentValue;\n    this.input[this.index.min].current.value = newValue.min;\n    this.input[this.index.max].current.value = this.thumbDrag || forceSet ? newValue.max : newValue.min + this.rangeWidth;\n    this.syncValues(); // Check if the thumbs cross each other\n\n    if (this.value.min > this.value.max) {\n      // Switch thumb indexes\n      this.index.min = +!this.index.min;\n      this.index.max = +!this.index.max; // Switch thumb attributes\n\n      this.removeNodeAttribute(this.thumb[this.index.min].current, DATA_UPPER);\n      this.removeNodeAttribute(this.thumb[this.index.max].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.min].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.max].current, DATA_UPPER); // Switch thumb drag labels\n\n      if (this.thumbDrag) {\n        this.thumbDrag = this.thumbDrag === MIN ? MAX : MIN;\n      }\n\n      this.syncValues();\n    }\n\n    this.sliderValue = forceSet ? this.value : newValue;\n    let valueSet = false;\n\n    if (currentValue.min !== this.input[this.index.min].current.value || forceSet) {\n      valueSet = true;\n    }\n\n    if (currentValue.max !== this.input[this.index.max].current.value || forceSet) {\n      valueSet = true;\n    } // Update the positions, dimensions and aria attributes everytime a value is set\n    // and call the onInput function from options (if set)\n\n\n    if (valueSet) {\n      if (callback && this.options.onInput) {\n        this.options.onInput([this.value.min, this.value.max]);\n      }\n\n      this.syncThumbDimensions();\n      this.updateThumbs();\n      this.updateRange();\n      this.updateAriaValueAttributes();\n    }\n  } // Sync var value with the input elements\n\n\n  syncValues() {\n    this.iterateMinMaxProps(_ => {\n      this.value[_] = +this.input[this.index[_]].current.value;\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n\n  updateThumbs() {\n    this.iterateMinMaxProps(_ => {\n      this.thumb[this.index[_]].current.style[this.ifVerticalElse('top', 'left')] = \"calc(\".concat((this.value[_] - this.options.min) / this.maxRangeWidth * 100, \"% + \").concat((0.5 - (this.value[_] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[_], \"px)\");\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n\n  updateRange() {\n    const deltaOffset = (0.5 - (this.value.min - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).min / this.element.current[\"client\".concat(this.ifVerticalElse('Height', 'Width'))];\n    const deltaDimension = (0.5 - (this.value.max - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).max / this.element.current[\"client\".concat(this.ifVerticalElse('Height', 'Width'))];\n    this.range.current.style[this.ifVerticalElse('top', 'left')] = \"\".concat(((this.value.min - this.options.min) / this.maxRangeWidth + deltaOffset) * 100, \"%\");\n    this.range.current.style[this.ifVerticalElse('height', 'width')] = \"\".concat(((this.value.max - this.options.min) / this.maxRangeWidth - (this.value.min - this.options.min) / this.maxRangeWidth - deltaOffset + deltaDimension) * 100, \"%\");\n  }\n\n  updateRangeLimits() {\n    this.iterateMinMaxProps((_, i) => {\n      this.rangeLimits[_] = this.options.thumbsDisabled[i] ? this.value[_] : this.options[_];\n    });\n  } // Called when,\n  // -> thumbs are initially set\n  // -> thumbs are disabled / enabled\n\n\n  updateTabIndexes() {\n    this.iterateMinMaxProps((_, i) => {\n      if (!this.options.disabled && !this.options.thumbsDisabled[i]) {\n        this.setNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX, 0);\n      } else {\n        this.removeNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX);\n      }\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n\n\n  updateAriaValueAttributes() {\n    this.iterateMinMaxProps(_ => {\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemin', this.options.min);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemax', this.options.max);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuenow', this.value[_]);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuetext', this.value[_]);\n    });\n  } // Called when,\n  // -> disabled property is modified\n\n\n  updateDisabledState() {\n    if (this.options.disabled) {\n      this.setNodeAttribute(this.element.current, DATA_DISABLED);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_DISABLED);\n    }\n  } // Called when,\n  // -> thumbsDisabled property is modified\n\n\n  updateThumbsDisabledState() {\n    this.options.thumbsDisabled.forEach((d, i) => {\n      const currIndex = this.currentIndex(i);\n\n      if (d) {\n        this.setNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', true);\n      } else {\n        this.removeNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', false);\n      }\n    });\n  } // Called when,\n  // -> min or max values are modified\n\n\n  updateLimits(limit) {\n    let m = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.options[limit] = m;\n    this.safeMinMaxValues();\n    this.iterateMinMaxProps(_ => {\n      this.input[0].current[_] = this.options[_];\n      this.input[1].current[_] = this.options[_];\n    });\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.setValue('', true);\n    this.updateRangeLimits();\n  } // Called when,\n  // -> the element is initially set\n  // -> orientation property is modified\n\n\n  updateOrientation() {\n    if (this.options.orientation === VERTICAL) {\n      this.setNodeAttribute(this.element.current, DATA_VERTICAL);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_VERTICAL);\n    }\n\n    this.range.current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.range.current.style[this.ifVerticalElse('width', 'height')] = '';\n    this.thumb[0].current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.thumb[1].current.style[this.ifVerticalElse('left', 'top')] = '';\n  } // thumb width & height values are to be synced with the CSS values for correct calculation of\n  // thumb position and range width & position\n  // Called when,\n  // -> setValue is called and a value is set (called before updateThumbs() and updateRange())\n  // -> thumb / range drag is initiated\n  // -> window is resized\n\n\n  syncThumbDimensions() {\n    this.iterateMinMaxProps(_ => {\n      this.thumbWidth[_] = float(style(this.thumb[this.index[_]].current).width);\n      this.thumbHeight[_] = float(style(this.thumb[this.index[_]].current).height);\n    });\n  } // thumb position calculation depending upon the pointer position\n\n\n  currentPosition(e, node) {\n    const currPos = (node[\"offset\".concat(this.ifVerticalElse('Top', 'Left'))] + (e[\"client\".concat(this.ifVerticalElse('Y', 'X'))] - node.getBoundingClientRect()[this.ifVerticalElse('top', 'left')]) - (this.thumbDrag ? (0.5 - (this.value[this.thumbDrag] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[this.thumbDrag] : 0)) / this.element.current[\"client\".concat(this.ifVerticalElse('Height', 'Width'))] * this.maxRangeWidth + this.options.min;\n\n    if (currPos < this.options.min) {\n      return this.options.min;\n    }\n\n    if (currPos > this.options.max) {\n      return this.options.max;\n    }\n\n    return currPos;\n  }\n\n  doesntHaveClassName(e, className) {\n    return !e.target.classList.contains(className);\n  }\n\n  elementFocused(e) {\n    let setFocus = false;\n\n    if (!this.isControlled && !this.options.disabled && (this.doesntHaveClassName(e, 'range-slider__thumb') && this.doesntHaveClassName(e, 'range-slider__range') || this.options.rangeSlideDisabled && this.doesntHaveClassName(e, 'range-slider__thumb'))) {\n      setFocus = true;\n    } // No action if both thumbs are disabled\n\n\n    if (setFocus && this.options.thumbsDisabled[0] && this.options.thumbsDisabled[1]) {\n      setFocus = false;\n    }\n\n    if (setFocus) {\n      const currPos = this.currentPosition(e, this.range.current);\n      const deltaMin = abs(this.value.min - currPos);\n      const deltaMax = abs(this.value.max - currPos);\n\n      if (this.options.thumbsDisabled[0]) {\n        if (currPos >= this.value.min) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true);\n          this.initiateThumbDrag(e, this.index.max, this.thumb[this.index.max].current);\n        }\n      } else if (this.options.thumbsDisabled[1]) {\n        if (currPos <= this.value.max) {\n          this.setValue(this.setMinMaxProps(currPos, this.value.max), true);\n          this.initiateThumbDrag(e, this.index.min, this.thumb[this.index.min].current);\n        }\n      } else {\n        let nearestThumbIndex = this.index.max;\n\n        if (deltaMin === deltaMax) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true);\n        } else {\n          this.setValue(this.setMinMaxProps(deltaMin < deltaMax ? currPos : this.value.min, deltaMax < deltaMin ? currPos : this.value.max), true);\n          nearestThumbIndex = deltaMin < deltaMax ? this.index.min : this.index.max;\n        }\n\n        this.initiateThumbDrag(e, nearestThumbIndex, this.thumb[nearestThumbIndex].current);\n      }\n    }\n  }\n\n  initiateDrag(e, node) {\n    this.syncThumbDimensions();\n    this.setNodeAttribute(node, DATA_ACTIVE);\n    this.startPos = this.currentPosition(e, node);\n    this.isDragging = true;\n  }\n\n  initiateThumbDrag(e, i, node) {\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      this.initiateDrag(e, node);\n      this.thumbDrag = this.index.min === i ? MIN : MAX;\n\n      if (this.options.onThumbDragStart) {\n        this.options.onThumbDragStart();\n      }\n    }\n  }\n\n  initiateRangeDrag(e) {\n    if (!this.options.disabled && !this.options.rangeSlideDisabled) {\n      this.initiateDrag(e, this.range.current);\n      this.rangeWidth = this.value.max - this.value.min;\n      this.thumbDrag = false;\n\n      if (this.options.onRangeDragStart) {\n        this.options.onRangeDragStart();\n      }\n    }\n  }\n\n  drag(e) {\n    if (this.isDragging && !this.isControlled) {\n      const lastPos = this.currentPosition(e, this.range.current);\n      const delta = lastPos - this.startPos;\n      let min = this.value.min;\n      let max = this.value.max;\n      const lower = this.thumbDrag ? this.rangeLimits.min : this.options.min;\n      const upper = this.thumbDrag ? this.rangeLimits.max : this.options.max;\n\n      if (!this.thumbDrag || this.thumbDrag === MIN) {\n        min = this.thumbDrag ? lastPos : this.sliderValue.min + delta;\n      }\n\n      if (!this.thumbDrag || this.thumbDrag === MAX) {\n        max = this.thumbDrag ? lastPos : this.sliderValue.max + delta;\n      }\n\n      if (min >= lower && min <= upper && max >= lower && max <= upper) {\n        this.setValue({\n          min,\n          max\n        });\n        this.startPos = lastPos;\n      } else {\n        // When min thumb reaches upper limit\n        if (min > upper && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(upper, upper));\n          this.startPos = lastPos;\n        } // When max thumb reaches lower limit\n\n\n        if (max < lower && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(lower, lower));\n          this.startPos = lastPos;\n        } // When range / min thumb reaches lower limit\n\n\n        if (min < lower) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(lower, this.value.max - this.value.min + lower));\n          } else {\n            this.setValue(this.setMinMaxProps(lower, this.value.max));\n          }\n\n          this.startPos = lastPos;\n        } // When range / max thumb reaches upper limit\n\n\n        if (max > upper) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(this.value.min - this.value.max + upper, upper));\n          } else {\n            this.setValue(this.setMinMaxProps(this.value.min, upper));\n          }\n\n          this.startPos = lastPos;\n        }\n      }\n\n      if (!this.thumbDrag) {\n        this.updateRangeLimits();\n      }\n    }\n  }\n\n  actualStepValue() {\n    const step = float(this.input[0].current.step);\n    return this.input[0].current.step === ANY ? ANY : step === 0 || isNaN(step) ? 1 : step;\n  } // Step value (up or down) using arrow keys\n\n\n  stepValue(i, key) {\n    const direction = (key === 37 || key === 40 ? -1 : 1) * this.ifVerticalElse(-1, 1);\n\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)] && !this.isControlled) {\n      let step = this.actualStepValue();\n      step = step === ANY ? 1 : step;\n      let min = this.value.min + step * (this.index.min === i ? direction : 0);\n      let max = this.value.max + step * (this.index.max === i ? direction : 0); // When min thumb reaches upper limit\n\n      if (min > this.rangeLimits.max) {\n        min = this.rangeLimits.max;\n      } // When max thumb reaches lower limit\n\n\n      if (max < this.rangeLimits.min) {\n        max = this.rangeLimits.min;\n      }\n\n      this.setValue({\n        min,\n        max\n      }, true);\n    }\n  }\n\n  render() {\n    // Set options to default values if not set\n    this.fallbackToDefault('rangeSlideDisabled', false);\n    this.fallbackToDefault('thumbsDisabled', [false, false]);\n    this.fallbackToDefault('orientation', 'horizontal');\n    this.fallbackToDefault('defaultValue', [25, 75]);\n    this.fallbackToDefault('disabled', false);\n    this.fallbackToDefault('onThumbDragStart', false);\n    this.fallbackToDefault('onRangeDragStart', false);\n    this.fallbackToDefault('onThumbDragEnd', false);\n    this.fallbackToDefault('onRangeDragEnd', false);\n    this.fallbackToDefault('onInput', false);\n    this.fallbackToDefault('step', 1);\n    this.fallbackToDefault('min', 0);\n    this.fallbackToDefault('max', 100);\n\n    if (this.props.value) {\n      this.fallbackToDefault('value', [25, 75]);\n    }\n\n    this.safeMinMaxValues();\n    this.safeThumbsDisabledValues();\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      \"data-testid\": \"element\",\n      id: this.props.id,\n      ref: this.element,\n      className: (0, _clsx.default)('range-slider', this.props.className)\n    }, /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[0],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[0] : this.isComponentMounted ? this.value.min : this.options.defaultValue[0],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[1],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[1] : this.isComponentMounted ? this.value.max : this.options.defaultValue[1],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[0],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-lower\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[1],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-upper\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.range,\n      className: \"range-slider__range\"\n    }));\n  }\n\n}\n\n;\nvar _default = RangeSlider;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}